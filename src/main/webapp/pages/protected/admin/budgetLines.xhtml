<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
                template="/template/template.xhtml">

    <ui:define name="title">Budget Lines</ui:define>
    <ui:define name="pageTitle">Budget Lines</ui:define>

    <ui:define name="content">

        <style>
            .background {
                height: 100%;
            }

            .first-layer-top {
                display: flex;
                justify-content: space-between;
                width: calc(100% - 25px);
                align-items: center;
            }

            div.btn-sect {
                display: flex;
                column-gap: 15px;
            }

            input#searchForm\:search.ui-inputfield {
                width: 840px !important;
            }

            h3.money {
                font-weight: 600;
                color: #777777 !important;
            }

            .ui-fluid {
                width: calc(100% - 35px);
            }

            div#j_idt62\:category {
                border-radius: 25px;
            }

        </style>
        <script type="text/javascript">
            function resizeDialog(dialogId) {
                var dialog = PF(dialogId).jq; // Get the jQuery object for the dialog
                var currentWidth = dialog.width(); // Get current width
                var newWidth = currentWidth + 225; // Add 225px

                // Set the new width
                dialog.css('width', newWidth + 'px');
            }

            function getErrorMessages() {
                return document.getElementById("message");
            }

            function createBL(xhr, status, args) {
                // Check if there are any error messages with severity 'error'
                var errorMessages = PF('dlg').jq.find('.ui-messages-error');

                if (args.validationFailed || errorMessages.length > 0) {
                    // If there are validation errors or error messages, do not hide the dialog
                    resizeDialog('dlg');
                    return;
                }

                // If no validation errors or error messages, hide the dialog
                PF('dlg').hide();
            }

            function createCat(xhr, status, args) {
                // Check if there are any error messages with severity 'error'
                var errorMessages = PF('Catdlg').jq.find('.ui-messages-error');

                if (args.validationFailed || errorMessages.length > 0) {
                    // If there are validation errors or error messages, do not hide the dialog
                    return;
                }

                // Check for backend errors
                if (xhr.getResponseHeader('javax.faces.source')) {
                    // If there are backend errors, don't hide the dialog
                    return;
                }

                PF('Catdlg').hide();
            }

        </script>

        <div class="first-layer-top">
            <div class="navigation">
                <h3 class="money">GRAND RUNNING BUDGET: Shs. #{budgetLineBean.currentRunningBudgetLinesAmount}</h3>
                <h3 class="money">GRAND EXPENDITURE ON BUDGETS: Shs. #{budgetLineBean.expenditureBudgetOnApprovedBudgetLines}</h3>
            </div>
            <p:growl id="message" showDetail="true"/>
            <div class="btn-sect">
                <h:form>
                    <ui:fragment rendered="#{roleBean.CanManageBudgetLines()}">
                        <p:commandButton styleClass="one" value="Create budget Line" oncomplete="PF('dlg').show();"
                                         process="@this"
                                         update="dlg"/>
                    </ui:fragment>

                    <p:dialog header="Create budget Line" widgetVar="dlg" modal="true" id="dlg" resizable="false"
                              width="450">
                        <h:panelGrid styleClass="ui-fluid" columns="3" id="createBLGrid"
                                     cellpadding="5">
                            <h:outputLabel for="name" value="Name:"/>
                            <p:inputText id="name" value="#{budgetLineBean.name}" required="true"
                                         requiredMessage="Name is required!">
                            </p:inputText>
                            <p:message for="name"/>

                            <h:outputLabel for="category" value="Category:"/>
                            <p:selectOneMenu id="category" value="#{budgetLineBean.categoryId}" required="true"
                                             requiredMessage="Category is required!">
                                <f:selectItem itemLabel="Select a Category" itemValue="" noSelectionOption="true"/>
                                <f:selectItems value="#{categoryBean.getCategories()}" var="category"
                                               itemLabel="#{category.name}" itemValue="#{category.id}"/>
                            </p:selectOneMenu>
                            <p:message for="category"/>

                            <h:outputLabel for="startDate" value="Start Date:"/>
                            <p:calendar id="startDate" value="#{budgetLineBean.startDate}" pattern="dd/MM/yyyy"
                                        required="true" navigator="true"
                                        styleClass="custom-calendar"
                                        requiredMessage="Start Date is required!"/>
                            <p:message for="startDate"/>

                            <h:outputLabel for="endDate" value="End Date:"/>
                            <p:calendar id="endDate" value="#{budgetLineBean.endDate}" pattern="dd/MM/yyyy"
                                        required="true" navigator="true"
                                        styleClass="custom-calendar"
                                        requiredMessage="End Date is required!"/>
                            <p:message for="endDate"/>


                            <h:outputLabel for="amount" value="Amount:"/>
                            <p:inputNumber id="amount" value="#{budgetLineBean.amount}" required="true"
                                           requiredMessage="Amount is required!">
                            </p:inputNumber>
                            <p:message for="amount"/>

                        </h:panelGrid>

                        <div class="last">
                            <p:commandButton value="Cancel" styleClass="two" oncomplete="PF('dlg').hide();"/>


                            <p:commandButton value="Save"
                                             styleClass="one"
                                             action="#{budgetLineBean.createBudgetLIne(budgetLineBean.amount,budgetLineBean.name,budgetLineBean.startDate,budgetLineBean.endDate,budgetLineBean.categoryId)}"
                                             update="tabView, createBLGrid, message"
                                             oncomplete="createBL(xhr, status, args)"/>
                        </div>
                    </p:dialog>
                </h:form>
                <h:form>
                    <ui:fragment rendered="#{roleBean.CanManageCategory()}">
                        <p:commandButton styleClass="three" value="Create Category" oncomplete="PF('Catdlg').show();"
                                         process="@this"
                                         update="Catdlg"/>
                    </ui:fragment>

                    <p:dialog header="Create Category For budget Line" widgetVar="Catdlg" modal="true" id="Catdlg"
                              resizable="false" width="500">
                        <h:panelGrid id="catGrid"
                                     styleClass="ui-panelgrid-blank ui-fluid"
                                     style="border:0 none; background-color:transparent;">
                            <h:outputLabel for="categoryName" value="Category Name :"/>
                            <p:inputText id="categoryName" value="#{categoryBean.name}" required="true"
                                         requiredMessage="Name is required!">
                            </p:inputText>
                            <p:message for="categoryName"/>

                            <h:outputLabel for="description" value="Description:"/>
                            <p:inputTextarea id="description" value="#{categoryBean.description}" rows="4" cols="50"
                                             required="true" requiredMessage="Description is required!"/>
                            <p:message for="description"/>

                        </h:panelGrid>

                        <div class="last">
                            <p:commandButton styleClass="two" value="Cancel"
                                             oncomplete="PF('Catdlg').hide();"/>
                            <p:commandButton styleClass="one" value="Create" action="#{categoryBean.addCategory()}"
                                             oncomplete="createCat(xhr, status, args);"
                                             update="tabView:CategoryTableForm:categoryTable, message, catGrid"/>
                        </div>
                    </p:dialog>
                </h:form>
            </div>
        </div>

        <p:tabView id="tabView">
            <p:tab id="currentBL" title="All Budget Lines">
                <ui:include src="allBudgetLines.xhtml"/>
            </p:tab>

            <p:tab id="draftsBL" title="Drafted">
                <ui:fragment rendered="#{roleBean.CanViewDraftedBudgetLines()}">
                    <ui:include src="budgetLineDrafts.xhtml"/>
                </ui:fragment>
            </p:tab>

            <p:tab id="pendingBL" title="Pending">
                <ui:fragment rendered="#{roleBean.CanViewPendingBudgetLines()}">
                    <ui:include src="pendingBudgetLines.xhtml"/>
                </ui:fragment>
            </p:tab>


            <p:tab id="approvedBL" title="Approved">
                <ui:fragment rendered="#{roleBean.CanViewApprovedBudgetLines()}">
                    <ui:include src="approvedBudgetLines.xhtml"/>
                </ui:fragment>
            </p:tab>


            <p:tab id="rejectedBL" title="Rejected">
                <ui:fragment rendered="#{roleBean.canViewRejectedBudgetLines()}">
                    <ui:include src="rejectedBudgetLines.xhtml"/>
                </ui:fragment>
            </p:tab>


            <p:tab id="epiredBL" title="Expired">
                <ui:fragment rendered="#{roleBean.canViewExpiredBudgetLines()}">
                    <ui:include src="expiredBudgetLines.xhtml"/>
                </ui:fragment>
            </p:tab>

            <p:tab id="categoriesBL" title="Budget Line Categories">
                <ui:fragment rendered="#{roleBean.canViewCategories()}">
                    <ui:include src="budgetLineCategories.xhtml"/>
                </ui:fragment>
            </p:tab>

        </p:tabView>


    </ui:define>

</ui:composition>