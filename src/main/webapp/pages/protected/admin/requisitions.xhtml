<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
                template="/template/template.xhtml">

    <ui:define name="title">Requisitions</ui:define>
    <ui:define name="pageTitle">Requisitions</ui:define>

    <ui:define name="content">
        <style>
            .background {
                height: 100%;
            }

            .first-layer-top {
                display: flex;
                justify-content: flex-end;
                width: calc(100%);
            }

            input#searchForm\:search.ui-inputfield {
                width: 840px !important;
            }


        </style>
        <script type="text/javascript">

            function createReq(xhr, status, args) {
                // Check if there are any error messages with severity 'error'
                var errorMessages = PF('createReq').jq.find('.ui-messages-error');

                if (args.validationFailed || errorMessages.length > 0) {
                    // If there are validation errors or error messages, do not hide the dialog
                    return;
                }

                // If no validation errors or error messages, hide the dialog
                PF('createReq').hide();
            }
        </script>
        <p:growl id="message" showDetail="true"/>
        <div class="first-layer-top">

            <h:form>
                <div class="btn-sect">
                    <ui:fragment rendered="#{roleBean.CanMakeRequisition()}">

                        <p:commandButton styleClass="one" value="Create Requisition" oncomplete="PF('createReq').show();"
                                         process="@this" update="createReq"
                        actionListener="#{requisitionBean.resetDialog()}"/>

                    </ui:fragment>

                    <p:dialog header="Create Requisition" widgetVar="createReq" modal="true" id="createReq" resizable="false"
                              width="515px">
                        <p:messages id="messages" showDetail="true" closable="true" >
                            <p:autoUpdate/>
                        </p:messages>
                        <h:panelGrid columns="2" cellpadding="5" styleClass="ui-fluid" id="reqGrid">

                            <h:outputLabel for="budgetLine" value="Budget Line:"/>
                                <p:selectOneMenu id="budgetLine" value="#{requisitionBean.budgetLineId}" required="true"
                                                 requiredMessage="Budget Line is required!">
                                    <f:selectItem itemLabel="Select a Budget Line" itemValue=""
                                                  noSelectionOption="true"/>
                                    <f:selectItems value="#{requisitionBean.getBudgetLines()}" var="budgetLine"
                                                   itemLabel="#{budgetLine.name}" itemValue="#{budgetLine.id}"/>
                                </p:selectOneMenu>


                            <h:outputLabel for="description" value="Description:"/>
                            <p:inputTextarea id="description" value="#{requisitionBean.description}" rows="4" cols="50"
                                             required="true" requiredMessage="Description is required!"/>


                            <h:outputLabel for="dateNeeded" value="Date needed:"/>
                            <p:calendar id="dateNeeded" value="#{requisitionBean.dateNeeded}" pattern="dd/MM/yyyy"
                                        required="true" navigator="true"
                                        styleClass="custom-calendar"
                                        requiredMessage="Date Needed is required!"/>

                            <h:outputLabel for="amount" value="Amount:"/>
                            <p:inputNumber id="amount" value="#{requisitionBean.amount}" required="true"
                                           requiredMessage="Amount is required!"/>


                        </h:panelGrid>
                        <div class="last">
                            <p:commandButton value="Cancel" styleClass="two" oncomplete="PF('createReq').hide();"/>
                            <p:commandButton value="Save"
                                             styleClass="one"
                                             action="#{requisitionBean.makeRequisition(requisitionBean.amount,requisitionBean.dateNeeded,requisitionBean.description,requisitionBean.budgetLineId)}"
                                             update="requisitionTab:allReqTable:requisitionTable, requisitionTab:draftForm:draftTable, reqGrid, message"
                                             process="@form"
                                             oncomplete="createReq(xhr, status, args)"/>
                        </div>


                    </p:dialog>
                </div>
            </h:form>
        </div>


        <p:tabView id="requisitionTab">

            <p:tab id="requisitions" title="All Requisitions">
                <ui:include src="allRequisitions.xhtml"/>
            </p:tab>

            <p:tab id="reqDrafts" title="Drafts">
                <ui:fragment rendered="#{roleBean.CanViewDraftedRequisitions()}">
                    <ui:include src="requisitionDrafts.xhtml"/>
                </ui:fragment>
            </p:tab>

            <p:tab id="reqPending" title="Pending">
                <ui:fragment rendered="#{roleBean.CanViewPendingRequisitions()}">
                    <ui:include src="requisitionPending.xhtml"/>
                </ui:fragment>
            </p:tab>

            <p:tab id="reqApproved" title="Approved">
                <ui:fragment rendered="#{roleBean.CanViewApprovedRequisitions()}">
                    <ui:include src="requisitionApproved.xhtml"/>
                </ui:fragment>
            </p:tab>


            <p:tab id="reqStaged" title="Change Requests">
                <ui:fragment rendered="#{roleBean.CanViewStagedRequisitions()}">
                    <ui:include src="requisitionStaged.xhtml"/>
                </ui:fragment>
            </p:tab>


            <p:tab id="reqFulfilled" title="Fulfilled">
                <ui:fragment rendered="#{roleBean.CanViewFulfilledRequisitions()}">
                    <ui:include src="requisitionFulfilled.xhtml"/>
                </ui:fragment>
            </p:tab>


            <p:tab id="reqRejected" title="Rejected">
                <ui:fragment rendered="#{roleBean.canViewRejectedBudgetLines()}">
                    <ui:include src="requisitionRejected.xhtml"/>
                </ui:fragment>
            </p:tab>


            <p:tab id="accountability" title="Accountability">
                <ui:fragment rendered="#{roleBean.CanViewAccountability()}">
                    <ui:include src="accountability.xhtml"/>
                </ui:fragment>
            </p:tab>
        </p:tabView>

    </ui:define>

</ui:composition>